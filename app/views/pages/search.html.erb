<%= render 'partial/navbar' %>

<div class="col-md-6">
  <div class="">
  <%= text_field_tag :search, params[:search], placeholder: "Where are you going?", class: "form-control",id:"pac-input" %>
</div>

</div>

<div class="col-md-6">
  <div id="map" style="height: 500px;">
      
  </div>
</div>

<script>
function initMap() {
    map = new google.maps.Map(document.getElementById('map'), {
    center: {lat:<%= @latitude %>, lng: <%= @longitude %>},
    zoom: 13
  });
  var input = /** @type {!HTMLInputElement} */(
      document.getElementById('pac-input'));

  var autocomplete = new google.maps.places.Autocomplete(input);
  autocomplete.bindTo('bounds', map);
  
  // マーカーとインフォウィンドウの配列を用意
  markers = [];
  infowindows = [];

  <% @jobs.each do |job| %>
        
    //markerはこの関数の中で同じ変数
    var marker = new google.maps.Marker({
      position: new google.maps.LatLng(<%= job.latitude %>, <%= job.longitude %>),
      map: map
    });

    // マーカー配列にマーカを保存
    markers.push(marker);
    
    // マーカーがクリックされた時の処理
    marker.addListener('click', function(){
      
        var content = "<div>" + '<a href="/jobs/' + <%= job.id %> +'">' + "</a>" + '<br>' + "<h5><%= job.name %></h5>" + "<div class="+"col-md-12"+">"+ "</div>";
    
      // infowindowを作成
      var infowindow = new google.maps.InfoWindow({
        content: content,
        maxWidth: 280
      });

      infowindow.open(map, this);
      infowindows.push(infowindow);
      
    });
            
  <% end %>
  
   autocomplete.addListener('place_changed', function() {

     // すべてのinfowindowを消す
    infowindows.forEach(function(infowindow) {
      infowindow.close();
    });
    infowindows = [];

    // すべてのmarkerを消す
    markers.forEach(function(marker) {
        marker.setVisible(false);
    });
    markers = [];

    var place = autocomplete.getPlace();
    if (!place.geometry) {
      window.alert("Autocomplete's returned place contains no geometry");
      return;
    }

    // If the place has a geometry, then present it on a map.
    if (place.geometry.viewport) {
      map.fitBounds(place.geometry.viewport);
      map.setZoom(13);
    } else {
      map.setCenter(place.geometry.location);
      map.setZoom(13);  // Why 13? Because it looks good.
    }

    // 入力欄の場所の緯度経度情報を取得
    var lat = place.geometry.location.lat();
    var lng = place.geometry.location.lng();
        
    // 緯度経度情報をまとめる   
    var geolocation = [lat,lng];

    // 場所の住所
    var location = place.formatted_address;

    // autocompleteの入力欄が変更されたらurlも変更して履歴に残す
    url = "/search?utf8=✓&search="+place.formatted_address;
    
    window.history.pushState(null,null,url);

    $.ajax({
      url: '/ajaxsearch',
        // this data is data for sending to url
        data: {'geolocation': geolocation}
    });
    
  });
  
}

</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBgUpeCKqhlUcC1vyYjH8-YZVsX9R-VjQI&signed_in=true&libraries=places&callback=initMap"
    async defer></script>